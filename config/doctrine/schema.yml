Category:
  tableName: catalog_category
  actAs:     [NestedSet]
  columns:
    id:          { type: integer, length: 11, unsigned: true, primary: true, autoincrement: true }
    name:        { type: string, length: 255, notnull: true }
  relations:
    Post:
      local:       id
      foreign:     category_id
      type:        many
      foreignType: one

Post:
  tableName: catalog_post
  actAs:     [Timestampable]
  columns:
    id:           { type: integer, notnull: true, length: 11, unsigned: true, primary: true, autoincrement: true }
    category_id:  { type: integer, notnull: true, length: 11, unsigned: true }
    user_name:    { type: string,  notnull: true, length: 255 }
    email:        { type: string,  notnull: true, length: 255 }
    email_hide:   { type: boolean, notnull: true, default: true }
    title:        { type: string,  notnull: true, length: 255 }
    description:  { type: string,  notnull: true }
    site_url:     { type: string,  length: 255 }
    phone:        { type: string,  length: 80 }
    price:        { type: float,   notnull: true, default: 0 }
    expires_at:   { type: timestamp, notnull: true }
    is_validated: { type: boolean, notnull: true, default: false }
  indexes:
    expires_at_idx:
      fields: [expires_at]
  relations:
    Category:
      local:       category_id
      foreign:     id
      type:        one
      foreignType: many
      onDelete:    cascade
    User:
      local:       email
      foreign:     email
      type:        one
      foreignType: many
      onDelete:    cascade

User:
  tableName: catalog_users
  columns:
    email:       { type: string, notnull: true, length: 255, primary: true }
    name:        { type: string, notnull: true, length: 255 }
    secret:      { type: string, notnull: true, length: 255 }
  relations:
    Post:
      local:       email
      foreign:     email
      type:        many
      foreignType: one

Page:
  tableName: app_pages
  actAs:     [Timestampable]
  columns:
    id:      { type: integer, length: 5, unsigned: true, primary: true, autoincrement: true }
    slug:    { type: string, length: 128, notnull: true, unique: true }
    title:   { type: string, length: 128, notnull: false }
    keywords:    { type: string, length: 255, notnull: false }
    description: { type: string, length: 255, notnull: false }
    header:  { type: string, length: 80 }
    content: { type: clob, notnull: true }
